$date
	Mon Oct  2 18:47:19 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ALU $end
$var wire 1 ! overflow $end
$var wire 8 " result [7:0] $end
$var wire 1 # sign $end
$var parameter 32 $ CLKT $end
$var reg 8 % A [7:0] $end
$var reg 8 & A_reg [7:0] $end
$var reg 8 ' B [7:0] $end
$var reg 8 ( B_reg [7:0] $end
$var reg 4 ) FN [3:0] $end
$var reg 4 * FN_reg [3:0] $end
$var reg 1 + clk $end
$scope module I_ALU $end
$var wire 8 , A [7:0] $end
$var wire 8 - B [7:0] $end
$var wire 4 . FN [3:0] $end
$var wire 1 ! overflow $end
$var wire 8 / result [7:0] $end
$var wire 1 # sign $end
$upscope $end
$upscope $end
$scope module tb_ALU_ctrl $end
$var wire 4 0 func [3:0] $end
$var wire 2 1 reg_ctrl [1:0] $end
$var parameter 32 2 CLKT $end
$var reg 1 3 clk $end
$var reg 1 4 enter $end
$var reg 1 5 rst_n $end
$var reg 1 6 sign $end
$scope module I_ALU_CTRL $end
$var wire 1 3 clk $end
$var wire 1 4 enter $end
$var wire 4 7 func [3:0] $end
$var wire 2 8 reg_ctrl [1:0] $end
$var wire 1 5 rst_n $end
$var wire 1 6 sign $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 2
b1010 $
$end
#0
$dumpvars
bz 8
bz 7
06
05
04
03
bz 1
bz 0
bz /
b0 .
b0 -
b0 ,
0+
b0 *
b0 )
b11 (
b0 '
b101 &
b0 %
z#
bz "
z!
$end
#5000
13
1+
#10000
15
b1 *
b1001 &
03
0+
#11000
14
#15000
13
1+
#20000
b0 *
b10010001 (
b10001 &
03
0+
#21000
04
#25000
13
1+
#30000
b1 *
b1111100 (
b10010001 &
03
0+
#31000
14
#35000
13
1+
#40000
b100 *
b11111001 (
b10010100 &
03
0+
#41000
04
#45000
13
1+
#50000
b1101001 (
b11010101 &
03
0+
#51000
14
#55000
13
1+
#60000
b1100011 (
b100011 &
03
0+
#61000
04
#65000
13
1+
#70000
b1101000 (
b11110010 &
03
0+
#71000
16
#75000
13
1+
#80000
b101101 (
b110001 &
03
0+
#81000
06
#85000
13
1+
#90000
b100100 (
b1010101 &
03
0+
#91000
14
#95000
13
1+
#100000
b1111 *
b0 (
b0 &
03
0+
#101000
04
#105000
13
1+
#110000
03
0+
b1111 )
b1111 .
